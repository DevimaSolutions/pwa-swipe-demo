import type { SwiperOptions } from 'swiper';

export interface ISliderProps extends ISliderOptions {
  slides: JSX.Element[];
}

export type ISliderOptions = {
  breakpoints?: {
    [width: number]: ISliderOptions;
    [ratio: string]: ISliderOptions;
  };
} & Pick<
  SwiperOptions,
  | 'modules'
  | 'updateOnWindowResize'
  | 'initialSlide'
  | 'speed'
  | 'width'
  | 'height'
  | 'autoHeight'
  | 'roundLengths'
  | 'effect'
  | 'runCallbacksOnInit'
  | 'watchOverflow'
  | 'userAgent'
  | 'url'
  | 'on'
  | 'onAny'
  | 'spaceBetween'
  | 'slidesPerView'
  | 'slidesPerGroup'
  | 'slidesPerGroupSkip'
  | 'slidesPerGroupAuto'
  | 'centeredSlides'
  | 'centeredSlidesBounds'
  | 'slidesOffsetBefore'
  | 'slidesOffsetAfter'
  | 'normalizeSlideIndex'
  | 'centerInsufficientSlides'
  | 'grabCursor'
  | 'touchEventsTarget'
  | 'touchRatio'
  | 'touchAngle'
  | 'simulateTouch'
  | 'shortSwipes'
  | 'longSwipes'
  | 'longSwipesRatio'
  | 'longSwipesMs'
  | 'followFinger'
  | 'allowTouchMove'
  | 'threshold'
  | 'touchStartPreventDefault'
  | 'touchStartForcePreventDefault'
  | 'touchMoveStopPropagation'
  | 'edgeSwipeDetection'
  | 'edgeSwipeThreshold'
  | 'touchReleaseOnEdges'
  | 'passiveListeners'
  | 'resistance'
  | 'resistanceRatio'
  | 'preventInteractionOnTransition'
  | 'allowSlidePrev'
  | 'allowSlideNext'
  | 'noSwiping'
  | 'noSwipingClass'
  | 'noSwipingSelector'
  | 'swipeHandler'
  | 'preventClicks'
  | 'preventClicksPropagation'
  | 'slideToClickedSlide'
  | 'watchSlidesProgress'
  | 'preloadImages'
  | 'updateOnImagesReady'
  | 'pagination'
  | 'navigation'
  | 'loop'
  | 'rewind'
  | 'loopAdditionalSlides'
  | 'loopedSlides'
  | 'loopFillGroupWithBlank'
  | 'loopPreventsSlide'
  | 'breakpointsBase'
  | 'autoplay'
  | 'controller'
  | 'coverflowEffect'
  | 'cubeEffect'
  | 'fadeEffect'
  | 'flipEffect'
  | 'creativeEffect'
  | 'cardsEffect'
  | 'hashNavigation'
  | 'history'
  | 'keyboard'
  | 'lazy'
  | 'mousewheel'
  | 'parallax'
  | 'scrollbar'
  | 'thumbs'
  | 'virtual'
  | 'zoom'
  | 'freeMode'
  | 'grid'
  | 'direction'
>;
